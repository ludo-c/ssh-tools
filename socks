#!/bin/sh
# Create a socks v5 proxy
# Uses socks.cfg file with "user", "host", and "port" variables
# http://artisan.karma-lab.net/faire-passer-trafic-tunnel-ssh

# returns: 0 ok (connected with 'check')
#          1 bad parameter
#          2 proxy disconnected (with 'check')
#          3 configuration file error
#          4 already running
#          5 error on start
#          6 error on stop

name=$(basename $0)
config_file=${HOME}/.config/${name}.cfg

if [ -f "${config_file}" ]; then
	. ${config_file}   # read user, host and port
else
	echo -e "user=\nhost=\nport=\n" > ${config_file}
	echo "config file ${config_file} created, please fill it"
	exit 3
fi

if [ -z "${user}" -o -z "${host}" -o -z "${port}" ]; then
	echo "user, host, and port variables are needed"
	exit 3
fi

ctrl_path="/tmp/ctrl-socks-socket"
ssh_options="ExitOnForwardFailure=yes"
log_file="/tmp/${name}.log"

stop() {
	echo -n "Stopping ${name}... "
	output=$(ssh -S ${ctrl_path} -O exit ${user}@${host} 2>&1)
	if [ $? -eq 0 ]; then  # 255 when socket doest not exist, 0 otherwise
		echo "OK"
	else
		echo "ERROR. ${output}"
		exit 6
	fi
}

start() {
	output=$(ssh -S ${ctrl_path} -O check ${user}@${host} 2>&1)
	if [ $? -eq 0 ]; then  # 255 when socket doest not exist, 0 otherwise
		echo "Already running. ${output}"
		exit 4
	fi
	echo -n "Starting ${name}... "
	ssh -o ${ssh_options} -MS ${ctrl_path} -nfNTD ${port} ${user}@${host} > ${log_file} 2>&1
	if [ $? -ne 0 ]; then
		echo "ERROR. See ${log_file}"
		exit 5
	else
		echo "OK"
	fi
}

check() {
	output=$(nc -zw30 localhost ${port})
	if [ $? -eq 0 ]; then
		if [ ! -z "$1" ]; then
			# Handle /etc/hosts
			ip=$(getent hosts ${host} | cut -d " " -f1)
			# Needs proxychains
			latency=$(proxychains nmap -sP ${ip} | grep -Eo '[[:digit:]]+\.[[:digit:]]+s' | tr -d 's')
			echo $latency
		else
			echo "active"
		fi
		return 0
	else
		echo "inactive"
		return 2
	fi
}

case $1 in
	"start")
		start ;;
	"stop")
		stop  ;;
	"check")
		check ; exit $? ;;
	"latency")
		check latency ; exit $? ;;
	"restart")
		stop
		start  ;;
	*)
		echo "usage: ${name} start|stop|restart|check|latency"
		exit 1
esac
